#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

--1. How many orders were placed in January? 
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';


--2. How many of those orders were for an iPhone? 
SELECT COUNT(orderid) FROM BIT_DB.JanSales 
WHERE Product = 'iPhone' 
AND length(orderid) = 6 
AND orderid <> 'Order ID';


--3. Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT customers.acctnum FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
ON customers.order_id = FebSales.orderid
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';


--4. Which product was the cheapest one sold in January, and what was the price?
SELECT DISTINCT Product, MIN(price) FROM BIT_DB.JanSales
GROUP BY Product, price
ORDER BY price ASC LIMIT 1;


--5. What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).
SELECT Product, SUM(Quantity)*price AS revenue FROM BIT_DB.JanSales
GROUP BY Product;


--6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(Quantity) AS Quantity_Sold, SUM(Quantity)*price AS Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;



--7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(DISTINCT cust.acctnum) AS Customers, AVG(Quantity*price) AS Avg_Spent
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON cust.order_id = Feb.orderID
WHERE Feb.Quantity>2
AND length(orderid) = 6 
AND orderid <> 'Order ID';


--8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;
